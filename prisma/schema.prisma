// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  game          Game[]
}

enum GameType {
  mcq
  open_ended
}

model Game {
  id          String     @id @default(cuid())
  userId      String
  timeStarted DateTime
  topic       String
  timeEnded   DateTime?
  gameType    GameType

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  question    Question[]

  @@index([userId])
}

model Question {
  id                 String   @id @default(cuid())
  question           String
  answer             String
  gameId             String
  options            Json? // for mcq
  percecntageCorrect Float? // for open_ended
  isCorrect          Boolean?
  questionType       GameType
  userAnswer         String?

  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId])
}
